<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_player</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Movement
if (Attacking = false)
{
//Move Down
if (keyboard_check(ord("S"))) &amp;&amp; (place_free(x,y+2))
    { y += 2
    sprite_index = s_MC2_walk_down
    image_speed  = 0.2
    Direction = "Down"
    }
//Move Up
if (keyboard_check(ord("W"))) &amp;&amp; (place_free(x,y+2))
    { y -= 2
    sprite_index = s_MC2_walk_up
    image_speed  = 0.2
    Direction = "Up"
    }
//Move Left
if (keyboard_check(ord("A"))) &amp;&amp; (place_free(x,y+2))
    { x -= 2
    sprite_index = s_MC2_walk_left
    image_speed  = 0.2
    Direction = "Left"
    }
//Move Right
if (keyboard_check(ord("D"))) &amp;&amp; (place_free(x,y+2))
    { x += 2
    sprite_index = s_MC2_walk_right
    image_speed  = 0.2
    Direction = "Right"
    }
//Idle Animation
if (!keyboard_check(ord("D"))) &amp;&amp; (!keyboard_check(ord("S"))) &amp;&amp; (!keyboard_check(ord("A"))) &amp;&amp; (!keyboard_check(ord("W")))
    { if (Direction = "Down")
        { sprite_index = s_MC2_idle_down
        }
    if (Direction = "Up")
        { sprite_index = s_MC2_idle_up
        }
    if (Direction = "Left")
        { sprite_index = s_MC2_idle_left
        }
    if (Direction = "Right")
        { sprite_index = s_MC2_idle_right
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Attacking
if (Attacking = false)
    { if (mouse_check_button_pressed(mb_left))
        { if (Direction = "Down")
            { sprite_index = s_MC2_attack_down
            image_speed = 0.4
            image_index = 0
            Attacking = true
            }
        if (Direction = "Up")
            { sprite_index = s_MC2_attack_up
            image_speed = 0.4
            image_index = 0
            Attacking = true
            }
        if (Direction = "Right")
            { sprite_index = s_MC2_attack_right
            image_speed = 0.4
            image_index = 0
            Attacking = true
            }
        if (Direction = "Left")
            { sprite_index = s_MC2_attack_left
            image_speed = 0.4
            image_index = 0
            Attacking = true
            }
        }
    }
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
